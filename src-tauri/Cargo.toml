[package]
name = "lens"
version = "0.2.1"
description = "An application to run SQL queries on structured files like csv, parquet, json"
authors = ["Mathieu Stefani"]
license = "MIT"
repository = "https://github.com/oktal/lens"
default-run = "lens"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.3", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.7.0", features = [ "shell-open", "dialog-save", "system-tray", "dialog-open", "icon-png"] }
datafusion = { version = "41.0.0", features = ["serde"] }
anyhow = "1.0.86"
uuid = { version = "1.10.0", features = ["v4", "fast-rng", "serde"] }
tokio = { version = "1.39.1", features = ["sync"] }
thiserror = "1.0.63"
futures = "0.3.30"
aws-sdk-ssooidc = "1.37.0"
aws-config = "1.5.4"
open = "5.3.0"
aws-sdk-sso = "1.36.0"
object_store = { version = "0.10.2", features = ["cloud", "aws", "gcp"] }
url = "2.5.2"
aws-runtime = "1.4.0"
aws-types = "1.3.3"
async-trait = "0.1.81"
datafusion-catalog = "41.0.0"
rand = "0.8.5"
bytes = "1.7.1"
arrow-schema = "52.2.0"
indexmap = "2.4.0"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
